# coding: utf-8

"""
    Bacularis API

    This is the Bacularis API documentation.  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: marcin.haba@bacula.pl
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20063Output(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'component_type': 'str',
        'component_name': 'str',
        'state': 'bool',
        'error_msg': 'str'
    }

    attribute_map = {
        'component_type': 'component_type',
        'component_name': 'component_name',
        'state': 'state',
        'error_msg': 'error_msg'
    }

    def __init__(self, component_type=None, component_name=None, state=None, error_msg=None):  # noqa: E501
        """InlineResponse20063Output - a model defined in Swagger"""  # noqa: E501
        self._component_type = None
        self._component_name = None
        self._state = None
        self._error_msg = None
        self.discriminator = None
        if component_type is not None:
            self.component_type = component_type
        if component_name is not None:
            self.component_name = component_name
        if state is not None:
            self.state = state
        if error_msg is not None:
            self.error_msg = error_msg

    @property
    def component_type(self):
        """Gets the component_type of this InlineResponse20063Output.  # noqa: E501

        Component type  # noqa: E501

        :return: The component_type of this InlineResponse20063Output.  # noqa: E501
        :rtype: str
        """
        return self._component_type

    @component_type.setter
    def component_type(self, component_type):
        """Sets the component_type of this InlineResponse20063Output.

        Component type  # noqa: E501

        :param component_type: The component_type of this InlineResponse20063Output.  # noqa: E501
        :type: str
        """

        self._component_type = component_type

    @property
    def component_name(self):
        """Gets the component_name of this InlineResponse20063Output.  # noqa: E501

        Component name  # noqa: E501

        :return: The component_name of this InlineResponse20063Output.  # noqa: E501
        :rtype: str
        """
        return self._component_name

    @component_name.setter
    def component_name(self, component_name):
        """Sets the component_name of this InlineResponse20063Output.

        Component name  # noqa: E501

        :param component_name: The component_name of this InlineResponse20063Output.  # noqa: E501
        :type: str
        """

        self._component_name = component_name

    @property
    def state(self):
        """Gets the state of this InlineResponse20063Output.  # noqa: E501

        State  # noqa: E501

        :return: The state of this InlineResponse20063Output.  # noqa: E501
        :rtype: bool
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this InlineResponse20063Output.

        State  # noqa: E501

        :param state: The state of this InlineResponse20063Output.  # noqa: E501
        :type: bool
        """

        self._state = state

    @property
    def error_msg(self):
        """Gets the error_msg of this InlineResponse20063Output.  # noqa: E501

        Error message  # noqa: E501

        :return: The error_msg of this InlineResponse20063Output.  # noqa: E501
        :rtype: str
        """
        return self._error_msg

    @error_msg.setter
    def error_msg(self, error_msg):
        """Sets the error_msg of this InlineResponse20063Output.

        Error message  # noqa: E501

        :param error_msg: The error_msg of this InlineResponse20063Output.  # noqa: E501
        :type: str
        """

        self._error_msg = error_msg

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20063Output, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20063Output):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
