# coding: utf-8

"""
    Bacularis API

    This is the Bacularis API documentation.  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: marcin.haba@bacula.pl
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20080Output(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'header': 'list[InlineResponse20080OutputHeader]',
        'scheduled': 'list[InlineResponse20080OutputScheduled]',
        'running': 'list[InlineResponse20080OutputRunning]',
        'terminated': 'list[InlineResponse20080OutputTerminated]'
    }

    attribute_map = {
        'header': 'header',
        'scheduled': 'scheduled',
        'running': 'running',
        'terminated': 'terminated'
    }

    def __init__(self, header=None, scheduled=None, running=None, terminated=None):  # noqa: E501
        """InlineResponse20080Output - a model defined in Swagger"""  # noqa: E501
        self._header = None
        self._scheduled = None
        self._running = None
        self._terminated = None
        self.discriminator = None
        if header is not None:
            self.header = header
        if scheduled is not None:
            self.scheduled = scheduled
        if running is not None:
            self.running = running
        if terminated is not None:
            self.terminated = terminated

    @property
    def header(self):
        """Gets the header of this InlineResponse20080Output.  # noqa: E501

        Status header  # noqa: E501

        :return: The header of this InlineResponse20080Output.  # noqa: E501
        :rtype: list[InlineResponse20080OutputHeader]
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this InlineResponse20080Output.

        Status header  # noqa: E501

        :param header: The header of this InlineResponse20080Output.  # noqa: E501
        :type: list[InlineResponse20080OutputHeader]
        """

        self._header = header

    @property
    def scheduled(self):
        """Gets the scheduled of this InlineResponse20080Output.  # noqa: E501

        Scheduled jobs  # noqa: E501

        :return: The scheduled of this InlineResponse20080Output.  # noqa: E501
        :rtype: list[InlineResponse20080OutputScheduled]
        """
        return self._scheduled

    @scheduled.setter
    def scheduled(self, scheduled):
        """Sets the scheduled of this InlineResponse20080Output.

        Scheduled jobs  # noqa: E501

        :param scheduled: The scheduled of this InlineResponse20080Output.  # noqa: E501
        :type: list[InlineResponse20080OutputScheduled]
        """

        self._scheduled = scheduled

    @property
    def running(self):
        """Gets the running of this InlineResponse20080Output.  # noqa: E501

        Running jobs  # noqa: E501

        :return: The running of this InlineResponse20080Output.  # noqa: E501
        :rtype: list[InlineResponse20080OutputRunning]
        """
        return self._running

    @running.setter
    def running(self, running):
        """Sets the running of this InlineResponse20080Output.

        Running jobs  # noqa: E501

        :param running: The running of this InlineResponse20080Output.  # noqa: E501
        :type: list[InlineResponse20080OutputRunning]
        """

        self._running = running

    @property
    def terminated(self):
        """Gets the terminated of this InlineResponse20080Output.  # noqa: E501

        Terminated jobs  # noqa: E501

        :return: The terminated of this InlineResponse20080Output.  # noqa: E501
        :rtype: list[InlineResponse20080OutputTerminated]
        """
        return self._terminated

    @terminated.setter
    def terminated(self, terminated):
        """Sets the terminated of this InlineResponse20080Output.

        Terminated jobs  # noqa: E501

        :param terminated: The terminated of this InlineResponse20080Output.  # noqa: E501
        :type: list[InlineResponse20080OutputTerminated]
        """

        self._terminated = terminated

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20080Output, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20080Output):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
